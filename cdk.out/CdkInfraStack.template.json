{
 "Resources": {
  "InputBucket3BF8630A": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/InputBucket/Resource"
   }
  },
  "InputBucketPolicy84EF9809": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "InputBucket3BF8630A"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "InputBucket3BF8630A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "InputBucket3BF8630A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/InputBucket/Policy/Resource"
   }
  },
  "InputBucketAutoDeleteObjectsCustomResourceE0706273": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "InputBucket3BF8630A"
    }
   },
   "DependsOn": [
    "InputBucketPolicy84EF9809"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/InputBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-851725389493-us-west-2",
     "S3Key": "2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "InputBucket3BF8630A"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4",
    "aws:asset:property": "Code"
   }
  },
  "FileTableE63FDBC8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_IMAGE"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/FileTable/Resource"
   }
  },
  "UploadHandlerServiceRole8CD4AA9A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/UploadHandler/ServiceRole/Resource"
   }
  },
  "UploadHandler4CB020C5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-851725389493-us-west-2",
     "S3Key": "3a98517918ccb6ca1df35e6d75b18b45f0f94e07f60a30be6918709671690d7d.zip"
    },
    "Handler": "upload.handler",
    "Role": {
     "Fn::GetAtt": [
      "UploadHandlerServiceRole8CD4AA9A",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "UploadHandlerServiceRole8CD4AA9A"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/UploadHandler/Resource",
    "aws:asset:path": "asset.3a98517918ccb6ca1df35e6d75b18b45f0f94e07f60a30be6918709671690d7d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ApiGateway11E7F47B": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "This service handles file uploads.",
    "Name": "Upload Service"
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Resource"
   }
  },
  "ApiGatewayDeploymentA26796E86579c98303ac908282959e508fe7357a": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "This service handles file uploads.",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "DependsOn": [
    "ApiGatewayitemsPOSTADEEEA17",
    "ApiGatewayitems4B1F76B8",
    "ApiGatewaysavePOST1AAA0946",
    "ApiGatewaysave0CB15A65"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Deployment/Resource"
   }
  },
  "ApiGatewayDeploymentStageprod1C6D5CD6": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ApiGatewayDeploymentA26796E86579c98303ac908282959e508fe7357a"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/DeploymentStage.prod/Resource"
   }
  },
  "ApiGatewayitems4B1F76B8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiGateway11E7F47B",
      "RootResourceId"
     ]
    },
    "PathPart": "items",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Default/items/Resource"
   }
  },
  "ApiGatewayitemsPOSTApiPermissionCdkInfraStackApiGateway2C18BC9CPOSTitemsB67FF817": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UploadHandler4CB020C5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:851725389493:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Default/items/POST/ApiPermission.CdkInfraStackApiGateway2C18BC9C.POST..items"
   }
  },
  "ApiGatewayitemsPOSTApiPermissionTestCdkInfraStackApiGateway2C18BC9CPOSTitemsC4347787": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UploadHandler4CB020C5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:851725389493:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Default/items/POST/ApiPermission.Test.CdkInfraStackApiGateway2C18BC9C.POST..items"
   }
  },
  "ApiGatewayitemsPOSTADEEEA17": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UploadHandler4CB020C5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayitems4B1F76B8"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Default/items/POST/Resource"
   }
  },
  "ApiGatewaysave0CB15A65": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiGateway11E7F47B",
      "RootResourceId"
     ]
    },
    "PathPart": "save",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Default/save/Resource"
   }
  },
  "ApiGatewaysavePOSTApiPermissionCdkInfraStackApiGateway2C18BC9CPOSTsave4C85944B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SaveToDynamoDBHandler026F66D6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:851725389493:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/save"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Default/save/POST/ApiPermission.CdkInfraStackApiGateway2C18BC9C.POST..save"
   }
  },
  "ApiGatewaysavePOSTApiPermissionTestCdkInfraStackApiGateway2C18BC9CPOSTsave1A4DC9E6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SaveToDynamoDBHandler026F66D6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:851725389493:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/save"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Default/save/POST/ApiPermission.Test.CdkInfraStackApiGateway2C18BC9C.POST..save"
   }
  },
  "ApiGatewaysavePOST1AAA0946": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SaveToDynamoDBHandler026F66D6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewaysave0CB15A65"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/ApiGateway/Default/save/POST/Resource"
   }
  },
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/Resource"
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet1/Subnet"
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet1/RouteTable"
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet1/DefaultRoute"
   }
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet1/EIP"
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet1/NATGateway"
   }
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet2/Subnet"
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet2/RouteTable"
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet2/DefaultRoute"
   }
  },
  "VPCPublicSubnet2EIP4947BC00": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet2/EIP"
   }
  },
  "VPCPublicSubnet2NATGateway3C070193": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet2EIP4947BC00",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTableAssociation5A808732"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PublicSubnet2/NATGateway"
   }
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PrivateSubnet1/Subnet"
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PrivateSubnet1/RouteTable"
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PrivateSubnet2/Subnet"
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PrivateSubnet2/RouteTable"
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet2NATGateway3C070193"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkInfraStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/IGW"
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/VPCGW"
   }
  },
  "VPCRestrictDefaultSecurityGroupCustomResource59474679": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "VPCB9E5F0B4",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "851725389493"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/VPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-west-2:851725389493:security-group/",
             {
              "Fn::GetAtt": [
               "VPCB9E5F0B4",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-851725389493-us-west-2",
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
    "aws:asset:property": "Code"
   }
  },
  "CreateVMHandlerServiceRole8FCA2A3E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/CreateVMHandler/ServiceRole/Resource"
   }
  },
  "CreateVMHandlerServiceRoleDefaultPolicy1DA1B1EE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:ListStreams",
        "ec2:RunInstances"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FileTableE63FDBC8",
         "StreamArn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateVMHandlerServiceRoleDefaultPolicy1DA1B1EE",
    "Roles": [
     {
      "Ref": "CreateVMHandlerServiceRole8FCA2A3E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/CreateVMHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateVMHandler637B4604": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-851725389493-us-west-2",
     "S3Key": "3a98517918ccb6ca1df35e6d75b18b45f0f94e07f60a30be6918709671690d7d.zip"
    },
    "Handler": "createVM.handler",
    "Role": {
     "Fn::GetAtt": [
      "CreateVMHandlerServiceRole8FCA2A3E",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "CreateVMHandlerServiceRoleDefaultPolicy1DA1B1EE",
    "CreateVMHandlerServiceRole8FCA2A3E"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/CreateVMHandler/Resource",
    "aws:asset:path": "asset.3a98517918ccb6ca1df35e6d75b18b45f0f94e07f60a30be6918709671690d7d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateVMHandlerDynamoDBEventSourceCdkInfraStackFileTable0547E19E00F887D0": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 1,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "FileTableE63FDBC8",
      "StreamArn"
     ]
    },
    "FunctionName": {
     "Ref": "CreateVMHandler637B4604"
    },
    "MaximumRetryAttempts": 10,
    "StartingPosition": "TRIM_HORIZON"
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/CreateVMHandler/DynamoDBEventSource:CdkInfraStackFileTable0547E19E/Resource"
   }
  },
  "SaveOutputHandlerServiceRoleE13214D1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/SaveOutputHandler/ServiceRole/Resource"
   }
  },
  "SaveOutputHandlerCF575F15": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-851725389493-us-west-2",
     "S3Key": "3a98517918ccb6ca1df35e6d75b18b45f0f94e07f60a30be6918709671690d7d.zip"
    },
    "Handler": "saveOutput.handler",
    "Role": {
     "Fn::GetAtt": [
      "SaveOutputHandlerServiceRoleE13214D1",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "SaveOutputHandlerServiceRoleE13214D1"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/SaveOutputHandler/Resource",
    "aws:asset:path": "asset.3a98517918ccb6ca1df35e6d75b18b45f0f94e07f60a30be6918709671690d7d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SaveToDynamoDBHandlerServiceRoleC500EF2A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/SaveToDynamoDBHandler/ServiceRole/Resource"
   }
  },
  "SaveToDynamoDBHandlerServiceRoleDefaultPolicyF2FE385C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "FileTableE63FDBC8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SaveToDynamoDBHandlerServiceRoleDefaultPolicyF2FE385C",
    "Roles": [
     {
      "Ref": "SaveToDynamoDBHandlerServiceRoleC500EF2A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/SaveToDynamoDBHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SaveToDynamoDBHandler026F66D6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-851725389493-us-west-2",
     "S3Key": "3a98517918ccb6ca1df35e6d75b18b45f0f94e07f60a30be6918709671690d7d.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "FileTableE63FDBC8"
      }
     }
    },
    "Handler": "saveToDynamoDB.handler",
    "Role": {
     "Fn::GetAtt": [
      "SaveToDynamoDBHandlerServiceRoleC500EF2A",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "SaveToDynamoDBHandlerServiceRoleDefaultPolicyF2FE385C",
    "SaveToDynamoDBHandlerServiceRoleC500EF2A"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/SaveToDynamoDBHandler/Resource",
    "aws:asset:path": "asset.3a98517918ccb6ca1df35e6d75b18b45f0f94e07f60a30be6918709671690d7d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21SyW7CMBD9lt6NK0KlnoEu4kAbQcUVOfYUDIkdxeOgKPK/10sgVO1p3rzZn53R6VNGpw/sYiZcnCelLGi/RcbPxFP73sxov7D8DEiW32pAyeS6lLwb6cFPzoIZcER0ilVa+JZfrCgh5EbgSMmqQjDav1nFUWoVQvc4h6aSxgTvtQWFW20bDmtW11IdQsJf1hHJKtpvdBoU7bhjQo6Y2Z4ZA2joPBjCanlgCBfW+VIwOK9lrB7gC9Sl7io/K7B3ntfoEOck4PPjLuHumzM0SngNeNQiUAk5Ajyj/a7mgdvlS5Lbwu+4tYVKao9ooy3CTcLEj5w/RHPJrtLFQJRolQfzwfA9XUjyRrYejo1XCqHx+JqQNhm8Ofp/cAzXOkeW1qCu/r3sdyhvdCsFNFGJqHFQKLzaffGnxdqiI0oLoCfz2GZT+uz/4clIOWmsQlkB3ST7AyXjk2ukAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "CdkInfraStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ApiGatewayEndpoint5AA8EC3A": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ApiGateway11E7F47B"
      },
      ".execute-api.us-west-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}